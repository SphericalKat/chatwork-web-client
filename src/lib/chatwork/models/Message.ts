/* tslint:disable */
/* eslint-disable */
/**
 * Chatwork API
 * API for interacting with Chatwork services
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Account } from './Account';
import {
    AccountFromJSON,
    AccountFromJSONTyped,
    AccountToJSON,
    AccountToJSONTyped,
} from './Account';

/**
 * 
 * @export
 * @interface Message
 */
export interface Message {
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    messageId?: string;
    /**
     * 
     * @type {Account}
     * @memberof Message
     */
    account?: Account;
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    body?: string;
    /**
     * 
     * @type {number}
     * @memberof Message
     */
    sendTime?: number;
    /**
     * 
     * @type {number}
     * @memberof Message
     */
    updateTime?: number;
}

/**
 * Check if a given object implements the Message interface.
 */
export function instanceOfMessage(value: object): value is Message {
    return true;
}

export function MessageFromJSON(json: any): Message {
    return MessageFromJSONTyped(json, false);
}

export function MessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Message {
    if (json == null) {
        return json;
    }
    return {
        
        'messageId': json['message_id'] == null ? undefined : json['message_id'],
        'account': json['account'] == null ? undefined : AccountFromJSON(json['account']),
        'body': json['body'] == null ? undefined : json['body'],
        'sendTime': json['send_time'] == null ? undefined : json['send_time'],
        'updateTime': json['update_time'] == null ? undefined : json['update_time'],
    };
}

  export function MessageToJSON(json: any): Message {
      return MessageToJSONTyped(json, false);
  }

  export function MessageToJSONTyped(value?: Message | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'message_id': value['messageId'],
        'account': AccountToJSON(value['account']),
        'body': value['body'],
        'send_time': value['sendTime'],
        'update_time': value['updateTime'],
    };
}

