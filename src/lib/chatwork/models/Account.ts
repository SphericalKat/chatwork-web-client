/* tslint:disable */
/* eslint-disable */
/**
 * Chatwork API
 * API for interacting with Chatwork services
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Account
 */
export interface Account {
    /**
     * 
     * @type {number}
     * @memberof Account
     */
    accountId?: number;
    /**
     * 
     * @type {number}
     * @memberof Account
     */
    roomId?: number;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    chatworkId?: string;
    /**
     * 
     * @type {number}
     * @memberof Account
     */
    organizationId?: number;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    organizationName?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    department?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    introduction?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    mail?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    telOrganization?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    telExtension?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    telMobile?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    skype?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    facebook?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    twitter?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    avatarImageUrl?: string;
}

/**
 * Check if a given object implements the Account interface.
 */
export function instanceOfAccount(value: object): value is Account {
    return true;
}

export function AccountFromJSON(json: any): Account {
    return AccountFromJSONTyped(json, false);
}

export function AccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): Account {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['account_id'] == null ? undefined : json['account_id'],
        'roomId': json['room_id'] == null ? undefined : json['room_id'],
        'name': json['name'] == null ? undefined : json['name'],
        'chatworkId': json['chatwork_id'] == null ? undefined : json['chatwork_id'],
        'organizationId': json['organization_id'] == null ? undefined : json['organization_id'],
        'organizationName': json['organization_name'] == null ? undefined : json['organization_name'],
        'department': json['department'] == null ? undefined : json['department'],
        'title': json['title'] == null ? undefined : json['title'],
        'url': json['url'] == null ? undefined : json['url'],
        'introduction': json['introduction'] == null ? undefined : json['introduction'],
        'mail': json['mail'] == null ? undefined : json['mail'],
        'telOrganization': json['tel_organization'] == null ? undefined : json['tel_organization'],
        'telExtension': json['tel_extension'] == null ? undefined : json['tel_extension'],
        'telMobile': json['tel_mobile'] == null ? undefined : json['tel_mobile'],
        'skype': json['skype'] == null ? undefined : json['skype'],
        'facebook': json['facebook'] == null ? undefined : json['facebook'],
        'twitter': json['twitter'] == null ? undefined : json['twitter'],
        'avatarImageUrl': json['avatar_image_url'] == null ? undefined : json['avatar_image_url'],
    };
}

  export function AccountToJSON(json: any): Account {
      return AccountToJSONTyped(json, false);
  }

  export function AccountToJSONTyped(value?: Account | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'account_id': value['accountId'],
        'room_id': value['roomId'],
        'name': value['name'],
        'chatwork_id': value['chatworkId'],
        'organization_id': value['organizationId'],
        'organization_name': value['organizationName'],
        'department': value['department'],
        'title': value['title'],
        'url': value['url'],
        'introduction': value['introduction'],
        'mail': value['mail'],
        'tel_organization': value['telOrganization'],
        'tel_extension': value['telExtension'],
        'tel_mobile': value['telMobile'],
        'skype': value['skype'],
        'facebook': value['facebook'],
        'twitter': value['twitter'],
        'avatar_image_url': value['avatarImageUrl'],
    };
}

