/* tslint:disable */
/* eslint-disable */
/**
 * Chatwork API
 * API for interacting with Chatwork services
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Member
 */
export interface Member {
    /**
     * 
     * @type {number}
     * @memberof Member
     */
    accountId?: number;
    /**
     * 
     * @type {string}
     * @memberof Member
     */
    role?: string;
    /**
     * 
     * @type {string}
     * @memberof Member
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Member
     */
    chatworkId?: string;
    /**
     * 
     * @type {number}
     * @memberof Member
     */
    organizationId?: number;
    /**
     * 
     * @type {string}
     * @memberof Member
     */
    organizationName?: string;
    /**
     * 
     * @type {string}
     * @memberof Member
     */
    department?: string;
    /**
     * 
     * @type {string}
     * @memberof Member
     */
    avatarImageUrl?: string;
}

/**
 * Check if a given object implements the Member interface.
 */
export function instanceOfMember(value: object): value is Member {
    return true;
}

export function MemberFromJSON(json: any): Member {
    return MemberFromJSONTyped(json, false);
}

export function MemberFromJSONTyped(json: any, ignoreDiscriminator: boolean): Member {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['account_id'] == null ? undefined : json['account_id'],
        'role': json['role'] == null ? undefined : json['role'],
        'name': json['name'] == null ? undefined : json['name'],
        'chatworkId': json['chatwork_id'] == null ? undefined : json['chatwork_id'],
        'organizationId': json['organization_id'] == null ? undefined : json['organization_id'],
        'organizationName': json['organization_name'] == null ? undefined : json['organization_name'],
        'department': json['department'] == null ? undefined : json['department'],
        'avatarImageUrl': json['avatar_image_url'] == null ? undefined : json['avatar_image_url'],
    };
}

  export function MemberToJSON(json: any): Member {
      return MemberToJSONTyped(json, false);
  }

  export function MemberToJSONTyped(value?: Member | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'account_id': value['accountId'],
        'role': value['role'],
        'name': value['name'],
        'chatwork_id': value['chatworkId'],
        'organization_id': value['organizationId'],
        'organization_name': value['organizationName'],
        'department': value['department'],
        'avatar_image_url': value['avatarImageUrl'],
    };
}

